"""Add ON DELETE CASCADE

Revision ID: bc89c76263d3
Revises: 4a734470526c
Create Date: 2025-01-10 05:12:37.379987

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'bc89c76263d3'
down_revision: Union[str, None] = '4a734470526c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('detail', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permission_name'), 'permission', ['name'], unique=False)
    op.create_table('rolepermission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('userpermission',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'permission_id')
    )
    op.drop_constraint('aircraft_ibfk_1', 'aircraft', type_='foreignkey')
    op.create_foreign_key(None, 'aircraft', 'airline', ['airline_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('flight_ibfk_3', 'flight', type_='foreignkey')
    op.drop_constraint('flight_ibfk_1', 'flight', type_='foreignkey')
    op.drop_constraint('flight_ibfk_2', 'flight', type_='foreignkey')
    op.drop_constraint('flight_ibfk_4', 'flight', type_='foreignkey')
    op.create_foreign_key(None, 'flight', 'aircraft', ['aircraft_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'flight', 'airport', ['arrival_airport_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'flight', 'airport', ['departure_airport_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'flight', 'airline', ['airline_id'], ['id'], ondelete='CASCADE')
    op.add_column('invoice', sa.Column('flight_id', sa.Integer(), nullable=False))
    op.drop_constraint('invoice_ibfk_1', 'invoice', type_='foreignkey')
    op.create_foreign_key(None, 'invoice', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'invoice', 'flight', ['flight_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('refreshtoken_ibfk_1', 'refreshtoken', type_='foreignkey')
    op.create_foreign_key(None, 'refreshtoken', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('seat_ibfk_1', 'seat', type_='foreignkey')
    op.create_foreign_key(None, 'seat', 'flight', ['flight_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('ticket_ibfk_1', 'ticket', type_='foreignkey')
    op.drop_constraint('ticket_ibfk_4', 'ticket', type_='foreignkey')
    op.drop_constraint('ticket_ibfk_2', 'ticket', type_='foreignkey')
    op.drop_constraint('ticket_ibfk_3', 'ticket', type_='foreignkey')
    op.create_foreign_key(None, 'ticket', 'flight', ['flight_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'ticket', 'invoice', ['invoice_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'ticket', 'seat', ['seat_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'ticket', 'tickettype', ['ticket_type_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('userrole_ibfk_1', 'userrole', type_='foreignkey')
    op.drop_constraint('userrole_ibfk_2', 'userrole', type_='foreignkey')
    op.create_foreign_key(None, 'userrole', 'role', ['role_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'userrole', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'userrole', type_='foreignkey')
    op.drop_constraint(None, 'userrole', type_='foreignkey')
    op.create_foreign_key('userrole_ibfk_2', 'userrole', 'user', ['user_id'], ['id'])
    op.create_foreign_key('userrole_ibfk_1', 'userrole', 'role', ['role_id'], ['id'])
    op.drop_constraint(None, 'ticket', type_='foreignkey')
    op.drop_constraint(None, 'ticket', type_='foreignkey')
    op.drop_constraint(None, 'ticket', type_='foreignkey')
    op.drop_constraint(None, 'ticket', type_='foreignkey')
    op.create_foreign_key('ticket_ibfk_3', 'ticket', 'seat', ['seat_id'], ['id'])
    op.create_foreign_key('ticket_ibfk_2', 'ticket', 'invoice', ['invoice_id'], ['id'])
    op.create_foreign_key('ticket_ibfk_4', 'ticket', 'tickettype', ['ticket_type_id'], ['id'])
    op.create_foreign_key('ticket_ibfk_1', 'ticket', 'flight', ['flight_id'], ['id'])
    op.drop_constraint(None, 'seat', type_='foreignkey')
    op.create_foreign_key('seat_ibfk_1', 'seat', 'flight', ['flight_id'], ['id'])
    op.drop_constraint(None, 'refreshtoken', type_='foreignkey')
    op.create_foreign_key('refreshtoken_ibfk_1', 'refreshtoken', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'invoice', type_='foreignkey')
    op.drop_constraint(None, 'invoice', type_='foreignkey')
    op.create_foreign_key('invoice_ibfk_1', 'invoice', 'user', ['user_id'], ['id'])
    op.drop_column('invoice', 'flight_id')
    op.drop_constraint(None, 'flight', type_='foreignkey')
    op.drop_constraint(None, 'flight', type_='foreignkey')
    op.drop_constraint(None, 'flight', type_='foreignkey')
    op.drop_constraint(None, 'flight', type_='foreignkey')
    op.create_foreign_key('flight_ibfk_4', 'flight', 'airport', ['departure_airport_id'], ['id'])
    op.create_foreign_key('flight_ibfk_2', 'flight', 'airline', ['airline_id'], ['id'])
    op.create_foreign_key('flight_ibfk_1', 'flight', 'aircraft', ['aircraft_id'], ['id'])
    op.create_foreign_key('flight_ibfk_3', 'flight', 'airport', ['arrival_airport_id'], ['id'])
    op.drop_constraint(None, 'aircraft', type_='foreignkey')
    op.create_foreign_key('aircraft_ibfk_1', 'aircraft', 'airline', ['airline_id'], ['id'])
    op.drop_table('userpermission')
    op.drop_table('rolepermission')
    op.drop_index(op.f('ix_permission_name'), table_name='permission')
    op.drop_table('permission')
    # ### end Alembic commands ###
